{
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "simple-import-sort"],
  "rules": {
    // TSX rules
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/function-component-definition": ["error", { "namedComponents": "arrow-function" }],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    // TS rules
    "prefer-template": "error",
    "no-useless-concat": "error",
    "object-curly-spacing": ["error", "always"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "no-empty-function": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-this-alias": "error",
    "quotes": ["error", "single"],
    "semi": ["error", "never"],
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    // Prettier rules
    "prettier/prettier": [
      "error",
      {
        "printWidth": 100,
        "singleQuote": true,
        "trailingComma": "es5",
        "tabWidth": 2,
        "useTabs": false,
        "endOfLine": "auto",
        "semi": false
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react$", "^@?\\w"],
              // Internal packages.
              ["^(@|components|services)(/.*|$)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    }
  ]
}
